name: Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  CERTIFICATE_BASE64: ${{ secrets.SIGNING_CERTIFICATE }}
  CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

jobs:
  Create-Release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Setup signtool
      uses: microsoft/setup-msbuild@v2
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Decode Certificate
      if: ${{ env.CERTIFICATE_BASE64 != '' }}
      run: |
        $certBytes = [System.Convert]::FromBase64String($env:CERTIFICATE_BASE64)
        $certPath = Join-Path -Path $env:RUNNER_TEMP -ChildPath "signing-cert.pfx"
        [IO.File]::WriteAllBytes($certPath, $certBytes)
        echo "CERTIFICATE_PATH=$certPath" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh
      
    - name: Sign Executable
      if: ${{ env.CERTIFICATE_BASE64 != '' }}
      run: |
        $files = Get-ChildItem -Path "bin\Release\*.exe" -Recurse
        foreach ($file in $files) {
          & "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe" sign /f "$env:CERTIFICATE_PATH" /p "$env:CERTIFICATE_PASSWORD" /tr http://timestamp.digicert.com /td sha256 /fd sha256 "$($file.FullName)"
        }
      shell: pwsh

    - name: Upload Artifacts
      id: artifact-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: LiteTask
        path: bin/Release/
        retention-days: 5
      
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.artifact-upload-step.outputs.artifact-url }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}